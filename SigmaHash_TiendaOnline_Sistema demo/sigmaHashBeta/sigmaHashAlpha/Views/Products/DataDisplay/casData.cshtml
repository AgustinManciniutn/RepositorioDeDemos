
@{
	Layout = null;
}


@using System.Reflection
@using System.ComponentModel
@using System.ComponentModel.DataAnnotations
@using sigmaHashAlpha.Models.Products

@model Case

@{Type type = typeof(Case);}

	<div class="DataForm ">
		
			<div class="DataImg">
				<img src="~/images/ProductImages/@Model.ImagesPaths.First()" />	
			</div>
		
			<div class="DataProdData">
		
				
		
				<div>
					@Model.Brand
				</div>
				<div>
					@Model.Model
				</div>
				<div>
					@Model.Price
				</div>
		
				<div>
					@Model.Warranty
				</div>
				<div>
					@Model.ShipsNational
				</div>
				<div>
					@Model.ShipsInternational
				</div>
		
		
		
			</div>
		
			<div class="DataModelData">
				
				@{MemberInfo[] Properties = type.GetProperties();}

				@{short j = 0;}
			
				@{var info = TypeDescriptor.GetProperties(type)
				.Cast<PropertyDescriptor>().ToDictionary(p => p.Name, p => p.DisplayName);}

				@{short l = 0;}
				@foreach(var obj in info)
				{
					PropertyInfo property = Properties[j] as PropertyInfo;
					var value = property.GetValue(Model);
		
					@if(l < info.Count() - 10)
					{
						<div class="datarow">
							<div>@obj.Value</div>

							@{
								if (value == null)
								{
									<div>-</div>
								}
								else
								{
									<div>@value</div>
								}


							}
							@{j++;}
							@{l++;}
						</div>
					}
				}
					
				
			
			</div>
	</div>
