@using System.Reflection

@using System.ComponentModel
@using sigmaHashAlpha.Models.Products

@{
    Layout = null;
 }
 @model Motherboard

<div class="webtitle editortitle">
	Motherboard Editor
</div>


@*<div>
	@{Motherboard obj = new Motherboard("MOT123","asus","gtx1060","motherboard");}
	@foreach(PropertyInfo prop in obj.GetType().GetProperties())
	{
		var type = Nullable.GetUnderlyingType(prop.PropertyType) ?? prop.PropertyType;



		<div><span>@type</span></div>
	}
</div>*@



<div class="formcontainer">


	<div>
		@using (Html.BeginForm("AddProduct","MOT", FormMethod.Post, new { enctype="multipart/form-data", @class ="formholder"} ))
		{
			
			<div class="productform">
				
				
				<div class="formimages">
					<div class="previewer">
						<div class="prodslider">		    
							<div id="gal1" class="gallery"> </div> <div class="imgdlt"><i class="bi bi-x-circle imgx"></i></div>
							<div id="gal2" class="gallery"> </div> <div class="imgdlt"><i class="bi bi-x-circle imgx"></i></div>
							<div id="gal3" class="gallery"> </div> <div class="imgdlt"><i class="bi bi-x-circle imgx"></i></div>
							<div id="gal4" class="gallery"> </div> <div class="imgdlt"><i class="bi bi-x-circle imgx"></i></div>
							<div id="gal5" class="gallery"> </div> <div class="imgdlt"><i class="bi bi-x-circle imgx"></i></div>
							<div id="gal6" class="gallery"> </div> <div class="imgdlt"><i class="bi bi-x-circle imgx"></i></div>
						</div>
					</div>
					<div class="gallerycontainer">
					
							<div class="onepic">
								<input type="file" asp-for="Images" id="addpic1" multiple="false" accept="image/png, image/jpeg"  hidden>
								<label for="addpic1"><i class="bi bi-file-earmark-plus"></i></label>
								
							</div>
							<div  class="onepic">
								
								<input type="file" asp-for="Images"  id="addpic2" accept="image/png, image/jpeg" hidden>
								<label for="addpic2"><i class="bi bi-file-earmark-plus"></i></label>

							</div>
							<div  class="onepic">
								
								<input type="file" asp-for="Images"  id="addpic3" accept="image/png, image/jpeg" hidden>
								<label for="addpic3"><i class="bi bi-file-earmark-plus"></i></label>

							</div>
							<div  class="onepic">
								
								<input type="file" asp-for="Images"  id="addpic4" accept="image/png, image/jpeg" hidden>
								<label for="addpic4"><i class="bi bi-file-earmark-plus"></i></label>
							</div>
							<div  class="onepic">
								
								<input type="file" asp-for="Images"  id="addpic5" accept="image/png, image/jpeg" hidden>
								<label for="addpic6"><i class="bi bi-file-earmark-plus"></i></label>
							</div>
							<div  class="onepic">
								
								<input type="file" asp-for="Images"  id="addpic6" accept="image/png, image/jpeg" hidden>
								<label for="addpic6"><i class="bi bi-file-earmark-plus"></i></label>
							</div>
					</div>
				</div>

				<div class="productinputs">
					<div class=" attrP">
						<div class="attrsubt">Brand:</div>
						@Html.EditorFor(m => m.Brand, "test", new { htmlAttributes = new { @class="", required="required"}})
					</div>
					<div class=" attrP">
						<div class="attrsubt">Model:</div> 
						@Html.EditorFor(m => m.Model, "test", new { htmlAttributes = new { @class="", required="required"}}) 	
					</div>
					<div id="priceinput" class=" attrP">
						<div class="attrsubt">Price:</div> 
						@Html.EditorFor(m => m.Price, "test", new { htmlAttributes = new { @class="priceinput", placeholder="00.00", required="required"  }}) $	
						  
					</div>


					<div class="proddetails">
						<div><span class="detail"><i class="bi bi-shield-shaded"></i> &nbsp Garantía - &nbsp</span> <span>@Html.EditorFor(m => m.Warranty, "test", new { htmlAttributes = new { @class="", @min="0" }})   </span> </div>
						<div><span class="detail"><i class="bi bi-truck"></i> &nbsp Ships nationally &nbsp</span> <span>@Html.CheckBoxFor(m => m.ShipsNational, new { htmlAttributes = new { @class="" }})   </span> </div>
						<div><span class="detail"><span class="material-symbols-outlined">south_america</span> &nbsp Ships internationally &nbsp</span> 
							<span>@Html.CheckBoxFor(m => m.ShipsInternational, new { htmlAttributes = new { @class="" }})   </span> </div>
					</div>

					<div id="editinfo">  <i class="bi bi-info"></i>- First in order image will be used as Thumbnail for store listing of products. </div>

					<div class="boxpreview">


					</div>
					<input asp-for="Category"  value="Motherboard" hidden />
@*					@Html.HiddenFor(m => m.Category, new { @Value = "MOT"})
*@
				</div>
				
			</div>


			
			<div class="specscontainer">
				<div class="attrsubt">GENERAL</div>
				<div class="attr attrNum">
					@Html.LabelFor(m => m.Platform) 
					@Html.DropDownListFor(m => m.Platform, (SelectList)ViewBag.Platforms, "Select a platform" , new{@class =""})	
				</div>
				<div class="attr attrNum">
					@Html.LabelFor(m => m.Socket) 
					@Html.EditorFor(m => m.Socket, new { htmlAttributes = new { @class="", @type="text"}}) 
				</div>

				<div class="attr attrNum">
					@Html.LabelFor(m => m.PCIE16Xslots) 
					@Html.EditorFor(m => m.PCIE16Xslots, "test", new { htmlAttributes = new { @class="", @type="number", @step="1", @min="0"}}) 	
				</div>
				<div class="attr attrB">
					@Html.LabelFor(m => m.PCIE1Xslots) 
					@Html.EditorFor(m => m.PCIE1Xslots, "test", new { htmlAttributes = new { @class="", @type="number", @step="1", @min="0", @value="0"}}) 
				</div>
				<div class="attr">
					@Html.LabelFor(m => m.MultiGPU) 
					@Html.EditorFor(m => m.MultiGPU, "test", new { htmlAttributes = new { @class="", @type="number", @step="1", @min="0", @value="0"}}) 
				</div>
				<div class="attr  attrB">
					@Html.LabelFor(m => m.SATAports) 
					@Html.EditorFor(m => m.SATAports, "test", new { @class=""}) 	
				</div>
				<div class="attr">
					@Html.LabelFor(m => m.VGAoutputs) 
					@Html.EditorFor(m => m.VGAoutputs, "test", new { @class=""}) 	
				</div>
				<div class="attr attrB">
					@Html.LabelFor(m => m.HDMIoutputs) 
					@Html.EditorFor(m => m.HDMIoutputs, "test", new { @class=""}) 	
				</div>
				<div class="attr">
					@Html.LabelFor(m => m.DIVoutputs) 
					@Html.EditorFor(m => m.DIVoutputs, "test", new { @class=""}) 	
				</div>
				<div class="attr attrB">
					@Html.LabelFor(m => m.DisplayPorts) 
					@Html.EditorFor(m => m.DisplayPorts, "test", new { @class=""}) 	
				</div>
				<div class="attr">
					@Html.LabelFor(m => m.M2slots) 
					@Html.EditorFor(m => m.M2slots, "test", new { @class=""}) 	
				</div>
				<div class="attr attrB">
					@Html.LabelFor(m => m.BuiltInWifi) 
					@Html.TextBoxFor(m => m.BuiltInWifi, "test", new { @class=""}) 	
				</div>
				<div class="attr">
					@Html.LabelFor(m => m.RGBconnection) 
					@Html.TextBoxFor(m => m.RGBconnection, "test", new { @class=""}) 	
				</div>
				<div class="attr attrB">
					@Html.LabelFor(m => m.USB20) 
					@Html.TextBoxFor(m => m.USB20, "test", new { @class=""}) 	
				</div>
				<div class="attr">
					@Html.LabelFor(m => m.USB30) 
					@Html.TextBoxFor(m => m.USB30, "test", new { @class=""}) 	
				</div>
				<div class="attr attrB">
					@Html.LabelFor(m => m.USB31) 
					@Html.TextBoxFor(m => m.USB31, "test", new { @class=""}) 	
				</div>
				<div class="attr">
					@Html.LabelFor(m => m.USB32) 
					@Html.TextBoxFor(m => m.USB32, "test", new { @class=""}) 	
				</div>
				<div class="attr attrB">
					@Html.LabelFor(m => m.USBtypeC) 
					@Html.TextBoxFor(m => m.USBtypeC, "test", new { @class=""}) 	
				</div>
				<div class="attr">
					@Html.LabelFor(m => m.PCIE4X) 
					@Html.TextBoxFor(m => m.PCIE4X, "test", new { @class=""}) 	
				</div>
				<div class="attr attrB">
					@Html.LabelFor(m => m.M2SATA) 
					@Html.TextBoxFor(m => m.M2SATA, "test", new { @class=""}) 	
				</div>
				<div class="attr">
					@Html.LabelFor(m => m.USB32) 
					@Html.TextBoxFor(m => m.USB32, "test", new { @class=""}) 	
				</div>
				<div class="attr attrB">
					@Html.LabelFor(m => m.M2nvme) 
					@Html.TextBoxFor(m => m.M2nvme, "test", new { @class=""}) 	
				</div>


				<div class="attr">
					@Html.LabelFor(m => m.factor) 
					@Html.TextBoxFor(m => m.factor, "test", new { @class=""}) 	
				</div>


				<div class="attr attrB">
					@Html.LabelFor(m => m.MaxCpuWatts) 
					@Html.TextBoxFor(m => m.MaxCpuWatts, "test", new { @class=""}) 	
				</div>
				<div class="attr">
					@Html.LabelFor(m => m.CPU4pins) 
					@Html.TextBoxFor(m => m.CPU4pins, "test", new { @class=""}) 	
				</div>
				<div class="attr attrB">
					@Html.LabelFor(m => m.CPU4pinsplus) 
					@Html.TextBoxFor(m => m.CPU4pinsplus, "test", new { @class=""}) 	
				</div>

				<div class="attr">
					@Html.LabelFor(m => m.pins24) 
					@Html.TextBoxFor(m => m.pins24, "test", new { @class=""}) 	
				</div>

				<div class="attr attrB">
					@Html.LabelFor(m => m.consumption) 
					@Html.TextBoxFor(m => m.consumption, "test", new { @class=""}) 	
				</div>

				<div class="attrsubt">MEMORY</div>


				<div class="attr">
					@Html.LabelFor(m => m.DDRslots) 
					@Html.TextBoxFor(m => m.DDRslots, "test", new { @class=""}) 	
				</div>

				<div class="attr attrB">
					@Html.LabelFor(m => m.DDR2slots) 
					@Html.TextBoxFor(m => m.DDR2slots, "test", new { @class=""}) 	
				</div>
				<div class="attr">
					@Html.LabelFor(m => m.DDR3slots) 
					@Html.TextBoxFor(m => m.DDR3slots, "test", new { @class=""}) 	
				</div>

				<div class="attr attrB">
					@Html.LabelFor(m => m.DDR4slots) 
					@Html.TextBoxFor(m => m.DDR4slots, "test", new { @class=""}) 	
				</div>

				<div class="attr">
					@Html.LabelFor(m => m.DDR5slots) 
					@Html.TextBoxFor(m => m.DDR5slots, "test", new { @class=""}) 	
				</div>

				<div class="attrsubt">SOUND </div>

				<div class="attr">
					@Html.LabelFor(m => m.SoundCard) 
					@Html.TextBoxFor(m => m.SoundCard, "test", new { @class=""}) 	
				</div>
				<button type="submit" class="submitbtn">Submit</button>
			</div>



			







		}

	</div>
</div>
